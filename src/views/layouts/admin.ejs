<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>
        <%= title %> | Admin
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Font Awesome 5 -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="/assets/images/favicon.ico">

    <!-- Plugin css -->
    <link rel="stylesheet" href="/assets/vendor/daterangepicker/daterangepicker.css">
    <link rel="stylesheet" href="/assets/vendor/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.css">

    <!-- Datatable css (for Products.ejs, Users.ejs) -->
    <link href="/assets/vendor/datatables.net-bs5/css/dataTables.bootstrap5.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/vendor/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css" rel="stylesheet" type="text/css" />
    <!-- Buttons Extension CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.bootstrap5.min.css" />

    <!-- Bootstrap Datepicker css -->
    <link href="/assets/vendor/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css" />
    <!-- Select2 Plugins css -->
    <link href="/assets/vendor/select2/css/select2.min.css" rel="stylesheet" type="text/css" />

    <!-- Theme Config Js -->
    <script src="/assets/js/hyper-config.js"></script>
    <!-- App css -->
    <link href="/assets/css/app-saas.min.css" rel="stylesheet" type="text/css" id="app-style" />
    <!-- Icons css -->
    <link href="/assets/css/icons.min.css" rel="stylesheet" type="text/css" />

    <style>
        .toast.fade {
            opacity: 0;
            transform: translateY(-15px);
            transition: opacity 0.2s ease, transform 0.2s ease;
        }

        .toast.fade.show {
            opacity: 1;
            transform: translateY(0);
        }

        /* Css cho loader */
        #loader-overlay {
            position: fixed;
            inset: 0;
            z-index: 2000;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .loader-backdrop {
            position: absolute;
            inset: 0;
            background: rgba(0, 0, 0, 0.4);
            backdrop-filter: blur(2px);
        }

        .loader-spinner {
            z-index: 1;
            text-align: center;
        }
    </style>
</head>

<body>
    <!-- Fullscreen Loader (có Css ở header tại layout admin)-->
    <div id="loader-overlay" style="display: none;">
        <div class="loader-backdrop"></div>
        <div class="loader-spinner">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div class="mt-2 text-white fw-semibold">Đang xử lý...</div>
        </div>
    </div>
    <!-- End Loader -->

    <!-- Notification Toast -->
    <%- include('../partials/admin/notification', { notification: notification }) %>

    <div class="wrapper">
        <%- include('../partials/admin/header') %>
        <%- include('../partials/admin/sidebar') %>

        <div class="content-page">
            <%- body %>

            <%- include('../partials/admin/footer') %>
        </div>
    </div>

    <!-- Theme setting -->
    <%- include('../partials/admin/theme') %>

    <script>
        // Auto-dismiss notification after 5 seconds
        document.addEventListener('DOMContentLoaded', () => {
            const toastEl = document.querySelector('.toast');
            if (toastEl) {
                const toast = new bootstrap.Toast(toastEl, {
                    autohide: true,
                    delay: 3500, // 3.5 seconds
                });
                toast.show();
            }
        });

        // Tự động xóa notification-toast khỏi DOM sau khi toast kết thúc
        // tránh việc không thao tác được với các thẻ bên dưới sau khi toast đã ẩn đi
        document.addEventListener('DOMContentLoaded', () => {
            const toastEl = document.querySelector('.toast');
            const toastWrapper = document.querySelector('.notification-toast');

            if (toastEl && toastWrapper) {
                const toast = new bootstrap.Toast(toastEl, {
                    autohide: true,
                    delay: 3500, // 3.5 seconds
                });

                toast.show();

                // Sau khi toast ẩn, xóa hoàn toàn khỏi DOM để tránh che
                toastEl.addEventListener('hidden.bs.toast', () => {
                    // Chờ thêm 300ms để animation hoàn tất
                    setTimeout(() => {
                        toastWrapper.remove();
                    }, 200);
                });
            }
        });
    </script>
</body>

</html>